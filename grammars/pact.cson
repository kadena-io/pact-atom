'scopeName': 'source.pact'
'fileTypes': [
  'pact','repl'
]
'foldingStartMarker': '\\(\\s*$'
'foldingStopMarker': '^\\s*\\)'
'name': 'Pact'
'patterns': [
  {
    'include': '#comment'
  }
  {
    'include': '#sexp'
  }
  {
    'include': '#reserved'
  }
  {
    'include': '#string'
  }
  {
    'include': '#list'
  }
  {
    'include': '#object'
  }
  {
    'include': '#literal'
  }
  {
    'include': '#symbol'
  }
]
'repository':
  'comment':
    'captures':
      '1':
        'name': 'punctuation.definition.comment.pact'
    'match': '(;).*$\\n?'
    'name': 'comment.line.semicolon.pact'
  'literal':
    'patterns': [
      {
        'match': '(true|false)'
        'name': 'constant.language.boolean.pact'
      }
      {
        'match': '(-?\\d+\\.\\d+)'
        'name': 'constant.numeric.double.pact'
      }
      {
        'match': '(-?\\d+)'
        'name': 'constant.numeric.integer.pact'
      }
      {
        'match': '(:=)'
        'name': 'constant.language.binder.pact'
      }
    ]
  'reserved':
    'patterns': [
      {
        'match': '(?<=(\\s|\\(|\\[|\\{))module|list|let|let\\*|defun|defpact|defconst|step|use|step-with-rollback(?=(\\s|\\)|\\]|\\}))'
        'name': 'keyword.reserved.pact'
      }
    ]
  'object':
    'begin': '(\\{)'
    'beginCaptures':
      '1':
        'name': 'punctuation.section.object.begin.pact'
    'end': '(\\}(?=[\\}\\]\\)\\s]*(?:;|$)))|(\\})'
    'endCaptures':
      '1':
        'name': 'punctuation.section.object.end.trailing.pact'
      '2':
        'name': 'punctuation.section.object.end.pact'
    'name': 'meta.object.pact'
    'patterns': [
      {
        'include': '$self'
      }
    ]
  'sexp':
    'begin': '(\\()'
    'beginCaptures':
      '1':
        'name': 'punctuation.section.expression.begin.pact'
    'end': '(\\))(\\n)|(\\)(?=[\\}\\]\\)\\s]*(?:;|$)))|(\\))'
    'endCaptures':
      '1':
        'name': 'punctuation.section.expression.end.trailing.pact'
      '2':
        'name': 'meta.after-expression.pact'
      '3':
        'name': 'punctuation.section.expression.end.trailing.pact'
      '4':
        'name': 'punctuation.section.expression.end.pact'
    'name': 'meta.expression.pact'
    'patterns': [
      {
        'begin': '(?<=\\()(module|list|use|let|let\\*|step|step-with-rollback)\\s+'
        'beginCaptures':
          '1':
            'name': 'keyword.reserved.pact'
        'end': '(?=\\))'
        'name': 'meta.definition.global.pact'
        'patterns': [
          {
            'include': '$self'
          }
        ]
      }
      {
        'begin': '(?<=\\()(defun|defpact)\\s+([\\w%#+-_&\\$@<>=\\?\\*!\\|/]+)\\s+\\([^\\)]'
        'beginCaptures':
          '1':
            'name': 'keyword.reserved.pact'
          '2':
            'name': 'entity.function.name.pact'
        'end': '(?=\\))'
        'name': 'meta.definition.global.pact'
        'patterns': [
          {
            'include': '$self'
          }
        ]
      }
      {
        'begin': '(?<=\\()(defconst)\\s+([\\w%#+-_&\\$@<>=\\?\\*!\\|/]+)\\s+'
        'beginCaptures':
          '1':
            'name': 'keyword.reserved.pact'
          '2':
            'name': 'entity.function.name.pact'
        'end': '(?=\\))'
        'name': 'meta.definition.global.pact'
        'patterns': [
          {
            'include': '$self'
          }
        ]
      }
      {
        'include': '#reserved'
      }
      {
        'include': '#literal'
      }
      {
        'include': '#list'
      }
      {
        'include': '#object'
      }
      {
        'include': '#sexp'
      }
      {
        'match': '(?<=\\()(.+?)(?=\\s|\\))'
        'captures':
          '1':
            'name': 'entity.name.function.pact'
        'patterns': [
          {
            'include': '$self'
          }
        ]
      }
      {
        'include': '$self'
      }
    ]
  'string':
    'begin': '(?<!\\\\)(")'
    'beginCaptures':
      '1':
        'name': 'punctuation.definition.string.begin.pact'
    'end': '(")'
    'endCaptures':
      '1':
        'name': 'punctuation.definition.string.end.pact'
    'name': 'string.quoted.double.pact'
  'symbol':
    'patterns': [
      {
        'match': '([\\w\\.\\-\\_\\:\\+\\=\\>\\<\\!\\?\\*][\\w\\.\\-\\_\\:\\+\\=\\>\\<\\!\\?\\*\\d]+)'
        'name': 'meta.symbol.pact'
      }
    ]
  'list':
    'begin': '(\\[)'
    'beginCaptures':
      '1':
        'name': 'punctuation.section.list.begin.pact'
    'end': '(\\](?=[\\}\\]\\)\\s]*(?:;|$)))|(\\])'
    'endCaptures':
      '1':
        'name': 'punctuation.section.list.end.trailing.pact'
      '2':
        'name': 'punctuation.section.list.end.pact'
    'name': 'meta.list.pact'
    'patterns': [
      {
        'include': '$self'
      }
    ]
